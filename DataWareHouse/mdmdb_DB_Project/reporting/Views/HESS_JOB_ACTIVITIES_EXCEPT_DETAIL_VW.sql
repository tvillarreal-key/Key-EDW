CREATE VIEW [reporting].[HESS_JOB_ACTIVITIES_EXCEPT_DETAIL_VW] AS 

WITH ACTIVITIES AS (
    SELECT * FROM REPORTING.HESS_JOB_ACTIVITIES_VW
)

, EXCEPTIONS AS (
    /* NOTE: GET EXCEPTIONS ASSOCIATED WITH THE HESS ACTIVITIES ABOVE */
    SELECT 
        E.ACTIVITY_NUMBER,
        EXCEPTION_NUMBER,
        START_TIME,
        CASE WHEN CONVERT(TIME,END_TIME) = '00:00:00' THEN DATEADD(S,-1,END_TIME) ELSE END_TIME END AS END_TIME,
        CASE WHEN CONVERT(TIME,END_TIME) = '00:00:00' THEN FORMAT(DATEADD(S,-1,END_TIME),'07-2024') ELSE FORMAT(END_TIME,'07-2024') END AS END_MONTH,
        EXCEPTION_TYPE,
        DURATION AS EXCEPTION_DURATION_MIN,
        CASE WHEN EXCEPTION_TYPE = 'Exception: wait' THEN DURATION ELSE 0 END AS EXCEPT_WAIT_DUR,
        CASE WHEN VARIANCE_DESC_01 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_01 END AS WAIT_CATEGORY,
        CASE WHEN VARIANCE_DESC_02 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_02 END AS RESP_EQUIP_OR_SVC,
        CASE WHEN VARIANCE_DESC_03 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_03 END AS VENDOR,
        CASE WHEN VARIANCE_DESC_04 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_04 END AS WAIT_REASON,
        CASE WHEN VARIANCE_DESC_05 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_05 END AS ROOT_CAUSE,
        CASE 
            WHEN UPPER(VARIANCE_DESC_01) = 'RIG' AND UPPER(VARIANCE_DESC_04) = 'UNSCHEDULED' THEN 'KV NPT/ Hess NPT'
            WHEN UPPER(ACTIVITYDESCRIPTION) LIKE '%STANDBY%' AND UPPER(VARIANCE_DESC_01) = 'WEATHER' AND UPPER(VARIANCE_DESC_05) = 'UNPLANNED' THEN 'LPT'
            WHEN UPPER(EXCEPTION_TYPE) LIKE '%WAIT%' THEN 'KV NPT'
            ELSE 'NO NPT' END AS NPT_TYPE,
        NOTE_TEXT AS COMMENTS
    FROM DBO.KEYVIEW_JOB_ACTIVITY_EXCEPTION E 
    INNER JOIN ACTIVITIES A ON (E.ACTIVITY_NUMBER = A.ACTIVITY_NUMBER)
    WHERE END_TIME > '2024-01-01 00:00:00'
)

, DATASET AS (
    /* COMPOSE FINAL DATASET */
    /* NOTE: EXCEPTION_DURATIONMINUTES COMES FROM THE KEYVIEW ACTIVITIES2 TABLE AND NOT THE ACTUAL EXCEPTIONS TABLE */
    SELECT 
        A.*,
        E.EXCEPTION_NUMBER, 
        E.START_TIME AS EXCEPT_START_TIME,
        E.END_TIME AS EXCEPT_END_TIME,
        E.END_MONTH AS EXCEPT_END_MONTH,
        E.EXCEPTION_TYPE,
        CASE WHEN E.EXCEPTION_DURATION_MIN IS NULL THEN 0 ELSE E.EXCEPTION_DURATION_MIN END AS EXCEPT_DURATION_MIN,
        CASE WHEN E.EXCEPTION_DURATION_MIN IS NULL THEN 0 ELSE E.EXCEPTION_DURATION_MIN/60 END AS EXCEPT_DURATION_HR,
        E.EXCEPT_WAIT_DUR,
        CASE 
            WHEN E.EXCEPT_WAIT_DUR IS NULL THEN A.DURATIONMINUTES 
            WHEN E.EXCEPT_WAIT_DUR IS NOT NULL THEN A.DURATIONMINUTES - E.EXCEPT_WAIT_DUR
            ELSE 0 END AS DURATION_WO_DELAY_MIN,
        CASE 
            WHEN E.EXCEPT_WAIT_DUR IS NULL THEN A.DURATIONMINUTES / 60
            WHEN E.EXCEPT_WAIT_DUR IS NOT NULL THEN (A.DURATIONMINUTES - E.EXCEPT_WAIT_DUR) / 60 
            ELSE 0 END AS DURATION_WO_DELAY_HR,
        E.WAIT_CATEGORY,
        E.WAIT_REASON,
        E.RESP_EQUIP_OR_SVC,
        E.VENDOR,
        E.ROOT_CAUSE,
        E.NPT_TYPE,
        E.COMMENTS
    FROM ACTIVITIES A 
    LEFT JOIN EXCEPTIONS E ON (A.ACTIVITY_NUMBER = E.ACTIVITY_NUMBER)
)


SELECT 
    *,
    ROW_NUMBER() OVER (PARTITION BY JOBNUMBER, ACTIVITY_NUMBER ORDER BY ACTIVITYENDTIME, EXCEPT_END_TIME) AS ROWNUMBER 
FROM DATASET   

;
GO

