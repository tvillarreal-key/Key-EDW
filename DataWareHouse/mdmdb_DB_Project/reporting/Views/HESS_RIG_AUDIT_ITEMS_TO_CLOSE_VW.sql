CREATE VIEW [reporting].[HESS_RIG_AUDIT_ITEMS_TO_CLOSE_VW] AS 

/* Hess Rig Audits with tracking of Action Items to Closure */
WITH INDEXES AS (
    /* DETERMINE WHERE THE LAST NAME AND FIRST NAMES ARE IN S025_SUPERVISOR FIELD */
    SELECT 
        *,
        CASE 
            WHEN UND_SCORE_IDX = UND_SCORE_2_IDX OR UND_SCORE_2_IDX = 0 THEN DASH_IDX ELSE UND_SCORE_2_IDX END AS FNAME_IDX
    FROM (
        SELECT 
            S003_REPORT_NUMBER AS REPORTNUMBER,
            S025_SUPERVISOR AS SUPERVISOR,
            CHARINDEX('_', S025_SUPERVISOR,1) AS UND_SCORE_IDX,
            LEN(S025_SUPERVISOR) - CHARINDEX('-', REVERSE(S025_SUPERVISOR), 1) + 1 AS DASH_IDX, -- LOOKS FOR THE DASH AT THE END OF THE STRING
            CHARINDEX('_', S025_SUPERVISOR, CHARINDEX('_', S025_SUPERVISOR, 1) + 1 ) UND_SCORE_2_IDX
        FROM DBO.ISCOUT_287345) A 
)

, SUPERVISOR_NAME AS (
    /* ADJUST THE CASE */ 
    SELECT 
        REPORTNUMBER,
        SUPERVISOR,
        CONCAT(LEFT(LNAME,1), LOWER(RIGHT(LNAME,LEN(LNAME) - 1))) AS LNAME,
        CONCAT(LEFT(FNAME,1), LOWER(RIGHT(FNAME,LEN(FNAME) -1))) AS FNAME 
    FROM (
    /* CREATE THE SUPERVISOR FNAME AND LNAME */
        SELECT
            REPORTNUMBER,
            SUPERVISOR,
            LEFT(SUPERVISOR, ABS(1-UND_SCORE_IDX)) AS LNAME,
            SUBSTRING(SUPERVISOR, 1 + UND_SCORE_IDX , ABS(FNAME_IDX - UND_SCORE_IDX)-1) AS FNAME 
        FROM INDEXES
    ) N
)

, AUDITS AS (
    /* GET ALL HESS RIG AUDIT INFORMATION FROM KPA */
    SELECT 
        S026_Asset AS RIG,
        S003_REPORT_NUMBER AS REPORTNUMBER,
        CONVERT(DATE, S004_DATE) AS CREATED_DATE,
        DATEADD(D, 11, S004_DATE) AS CALC_DUE_DATE,
        S007_VERSION AS RPT_VERSION,
        CONCAT(S.FNAME,' ', S.LNAME) AS ASSIGNED_TO,
        CONCAT(
            RIGHT(S024_District_Manager, LEN(S024_DISTRICT_MANAGER) - CHARINDEX(',', S024_District_Manager)),-- FIRST NAM
            ' ', -- SPACE
            LEFT(S024_DISTRICT_MANAGER, ABS(1 - CHARINDEX(',',S024_DISTRICT_MANAGER))) -- LAST NAME
            ) AS DISTRICT_MANAGER,
        S022_Marketplace AS MARKETPLACE,
        LEFT(S023_LCO, CHARINDEX('-', S023_LCO)-1) AS LCO,
        RIGHT(S023_LCO, LEN(S023_LCO) - CHARINDEX('-', S023_LCO)) AS YARD_NAME
    FROM DBO.ISCOUT_287345 D-- this is the view that combines all the different iscout tables due to fields being added over time
    LEFT JOIN SUPERVISOR_NAME S ON (D.S003_REPORT_NUMBER = S.REPORTNUMBER)
)

, FOLLOW_UP AS (
    /* GET THE FOLLOW UP INFORMATION FOR ACTION ITEMS FROM AZURE/ KPA */
    SELECT 
        RESPONSE_ID,
        ID,
        COUNT(ID) OVER (PARTITION BY RESPONSE_ID) AS ACTION_ITEMS,
        OPEN_STATUS,
        DATEADD(S, CONVERT(INT,LEFT(RESOLVED_ON,10)), '1970-01-01') AS RESOLVED_ON, --CONVERT UNIX TIME TO DATETIME
        CAST(DUE AS DATE) AS KPA_DUE_DATE
    FROM DBO.IScout_Followups 
    WHERE FORM_ID = '287345'
)

, MESSAGES AS (
    /* GET FOLLOW UP MESSAGE THAT ARE ASSOCIATED WITH ACTION ITEMS AND FOLLOWUPS */
    SELECT 
        RESPONSE_ID,
        FOLLOWUP_ID,
        ID AS MESSAGE_ID,
        M_USER_ID,
        DATEADD(S, CONVERT(INT,LEFT(DATE_OF_MESSAGE,10)), '1970-01-01') AS DATE_OF_MESSAGE,
        NOTE,
        NOTIFY,
        CONVERT(DATE, RECORD_INSERTED_ON) AS RECORD_INSERTED_ON,
        CONVERT(DATE, RECORD_UPDATED_ON) AS RECORD_UPDATED_ON, 
        ROW_NUMBER() OVER (PARTITION BY RESPONSE_ID, FOLLOWUP_ID ORDER BY RESPONSE_ID, FOLLOWUP_ID) AS FOLLOWUP_NOTES_CNT
    FROM DBO.IScout_Followup_Messages
    where NOTE <> ''
)

, FINAL_SQL AS (
    /* COMPILE THE AUDITS, ACTION ITEMS AND MESSAGES */
    SELECT 
        A.MARKETPLACE,
        A.LCO,
        A.YARD_NAME,
        A.RIG,
        FORMAT(A.CREATED_DATE,'MM-yyyy') AS REPORT_MONTH,
        A.REPORTNUMBER,
        CASE WHEN F.ACTION_ITEMS IS NULL THEN 0 ELSE F.ACTION_ITEMS END AS ACTION_ITEMS,
        A.CREATED_DATE AS AUDIT_DATE,
        CASE 
            WHEN F.ACTION_ITEMS IS NULL THEN A.CREATED_DATE 
            WHEN YEAR(F.RESOLVED_ON) = 1970 THEN NULL  -- 1970 IS THE DEFAULT DATE YEAR WHEN THERE IS NO DATA AVAILABLE
            ELSE F.RESOLVED_ON END AS RESOLVED_DATE,
        CASE 
            WHEN F.ACTION_ITEMS IS NULL THEN 0 
            WHEN YEAR(F.RESOLVED_ON) = 1970 THEN 0
            ELSE DATEDIFF(D, A.CREATED_DATE, F.RESOLVED_ON)  
            END AS DAYS_TO_CLOSE,
        CASE 
            WHEN YEAR(F.RESOLVED_ON) = 1970 THEN DATEDIFF(D, A.CREATED_DATE, GETDATE()) -- 1970 IS THE DEFAULT DATE YEAR WHEN THERE IS NO DATA AVAILABLE
            ELSE DATEDIFF(D, A.CREATED_DATE, F.RESOLVED_ON) END AS OPEN_DAYS,
        CASE
            WHEN YEAR(F.RESOLVED_ON) = 1970 THEN 'OPEN' -- 1970 IS THE DEFAULT DATE YEAR WHEN THERE IS NO DATA AVAILABLE
            WHEN F.RESOLVED_ON <= A.CALC_DUE_DATE THEN 'ON_TIME' 
            WHEN F.ACTION_ITEMS IS NULL THEN 'NO ACTION ITEMS'
            ELSE 'LATE' END AS RESOLVED_FLAG,
        F.KPA_DUE_DATE,
        CASE WHEN F.ACTION_ITEMS IS NULL THEN NULL ELSE A.CALC_DUE_DATE END AS CALC_DUE_DATE,
        CASE WHEN F.ACTION_ITEMS IS NULL THEN 0 ELSE DATEDIFF(D,F.KPA_DUE_DATE,A.CALC_DUE_DATE) END AS KPA_VS_ACTUAL_DUE_DAYS,
        A.ASSIGNED_TO,
        A.DISTRICT_MANAGER,
        COUNT(M.MESSAGE_ID) OVER (PARTITION BY A.REPORTNUMBER, M.FOLLOWUP_ID) AS MESSAGES_PER_FOLLOWUP,
        ROW_NUMBER() OVER (PARTITION BY A.REPORTNUMBER, M.FOLLOWUP_ID ORDER BY M.DATE_OF_MESSAGE) AS MESSAGE_ORDER, 
        CASE WHEN F.ACTION_ITEMS IS NULL THEN NULL ELSE M.DATE_OF_MESSAGE END AS DATE_OF_MESSAGE,
        CASE 
            WHEN F.ACTION_ITEMS IS NULL THEN 'CLOSED'  -- THERE WERE NOT ACTION ITEMS
            WHEN F.OPEN_STATUS = 'false' THEN 'CLOSED' ELSE 'OPEN' END AS OPEN_STATUS, 
        CASE WHEN M.NOTE IS NULL THEN '' ELSE M.NOTE END AS NOTE,
        A.RPT_VERSION
    FROM AUDITS A 
    LEFT JOIN FOLLOW_UP F ON (A.REPORTNUMBER = F.RESPONSE_ID)
    LEFT JOIN MESSAGES M ON (F.ID = M.FOLLOWUP_ID)
)

SELECT * FROM FINAL_SQL 
;
GO

