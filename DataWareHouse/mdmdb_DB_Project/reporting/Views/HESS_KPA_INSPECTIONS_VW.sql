CREATE VIEW [reporting].[HESS_KPA_INSPECTIONS_VW] AS 

/* NOTE GRAB ALL HESS RIGS/ ACTIVITIES */
WITH HESS_ACTIVITIES AS (
    /* GATHER ALL ACTIVITY FOR HESS RIGS, MAKE SURE TO BACK OFF 1 SECOND FOR ANY ACTIVITIES ENDING AT MIDNIGHT TO KEEP THEM IN THE CORRECT DAY */
    SELECT 
        FORMAT(CONVERT(INT, RIG), '0000000') AS RIG,
        JOBNUMBER,
        ACTIVITY_NUMBER,
        CASE WHEN CONVERT(TIME,ACTIVITYENDTIME) = '00:00:00.000' THEN CONVERT(DATE,DATEADD(S,-1,ACTIVITYENDTIME)) ELSE CONVERT(DATE,ACTIVITYENDTIME) END AS ACTIVITYDATE,
        CASE WHEN CONVERT(TIME,ACTIVITYENDTIME) = '00:00:00.000' THEN EOMONTH(DATEADD(S,-1,ACTIVITYENDTIME)) ELSE EOMONTH(ACTIVITYENDTIME) END AS ACTIVITYMONTH,
        ACTIVITY_DESCRIPTION AS ACTIVITYABBREV,
        ACTIVITYDESCRIPTION AS ACTIVITYDESC,
        DURATIONMINUTES
    FROM DBO.KEYVIEW_ACTIVITIES2 A 
    WHERE CUSTOMERORGUNIT LIKE '%Hess%' AND ACTIVITYENDTIME IS NOT NULL --NULL ENDTIME MEANS IT IS AN OPEN ACTIIVTY SO IT SHOULD NOT BE INCLUDED IN THE REPORT
)

, HESS_RIGS_TYPE AS (
    SELECT 
        * 
    FROM REPORTING.HESS_RIG_LIST_HIST
)

, HESS_RIGS AS (
    /* JUST GET A DISTINCT LIST OF HESS RIGS */
    SELECT DISTINCT RIG FROM HESS_RIGS_TYPE
)


, RIG_DETAIL AS (
    SELECT 
        ASSET_NUM AS RIG,
        LOCO_CODE,
        LOCO_NAME,
        MKTP_CODE,
        MKTP_NAME,
        YARD_CODE,
        YARD_NAME 
    FROM DBO.MDM_ASSETS A 
    INNER JOIN HESS_RIGS R ON (A.ASSET_NUM = R.RIG) 
)

, DAILY_JOB AS (
    /* CALCULATE THE DAILY SUMARIES OF ACTIVITIES AND DURATION BY RIG/ JOB */
    SELECT 
        RIG,
        JOBNUMBER,
        ACTIVITYMONTH,
        ACTIVITYDATE,
        COUNT(DISTINCT ACTIVITY_NUMBER) AS DAILY_ACTIVITIES,
        SUM(DURATIONMINUTES)/60 AS DAILY_DURATION_HR
    FROM HESS_ACTIVITIES
    GROUP BY RIG, JOBNUMBER, ACTIVITYMONTH, ACTIVITYDATE
)

, DAILY_RIG AS (
    SELECT 
        RIG,
        ACTIVITYMONTH,
        ACTIVITYDATE,
        COUNT(DISTINCT ACTIVITY_NUMBER) AS DAILY_ACTIVITIES,
        SUM(DURATIONMINUTES)/60 AS DAILY_DURATION_HR
    FROM HESS_ACTIVITIES
    GROUP BY RIG, ACTIVITYMONTH, ACTIVITYDATE
)

, CREW AS (
    /* GET CREW INFORMATION BY DATE RIG JOB */
    SELECT 
        ASSET_NUMBER,
        WORK_DATE,
        EMPLOYEE_ID AS EIN,
        SUM(DURATION) AS WORKER_DURATION_HR
    FROM DBO.LABORINCREMENTAL2 L  
    INNER JOIN HESS_RIGS H ON (H.RIG = L.ASSET_NUMBER)
    GROUP BY ASSET_NUMBER, WORK_DATE, EMPLOYEE_ID
)

, DAILY_CREW AS (
    SELECT 
        ASSET_NUMBER,
        WORK_DATE,
        COUNT(DISTINCT EIN) AS DAILY_CREW_COUNT,
        SUM(WORKER_DURATION_HR) AS DAILY_CREW_DURATION
    FROM CREW
    GROUP BY ASSET_NUMBER, WORK_DATE
)


, RIG_CREW AS (
    /* COMBINE THE RIG AND CREW INFORMATION */
    SELECT 
        R.RIG,
        R.ACTIVITYDATE AS WORK_DATE,
        R.ACTIVITYMONTH AS WORK_MONTH,
        R.DAILY_ACTIVITIES,
        R.DAILY_DURATION_HR,
        C.DAILY_CREW_COUNT,
        C.DAILY_CREW_DURATION,
        C.DAILY_CREW_DURATION/ C.DAILY_CREW_COUNT AS AVG_DAILY_WORKER_DUR
    FROM DAILY_RIG R 
    LEFT JOIN DAILY_CREW C ON (R.RIG = C.ASSET_NUMBER AND R.ACTIVITYDATE = C.WORK_DATE)

)

, EXCEPTIONS AS (
    SELECT
        JOB_ID,
        ACTIVITY_NUMBER,
        EXCEPTION_TYPE,
        CONVERT(DATE,END_TIME) AS EXCEPTION_DATE,
        VARIANCE_DESC_01 AS WAIT_CATEGORY,
        VARIANCE_DESC_04 AS WAIT_REASON,
        VARIANCE_DESC_05 AS ROOT_CAUSE ,
        DURATION
    FROM DBO.KEYVIEW_JOB_ACTIVITY_EXCEPTION
    WHERE EXCEPTION_TYPE LIKE '%wait%' AND YEAR(END_TIME) = 2024
)

, EXCEPTION_WAIT AS (
    /* SUM UP DURATION BY DATE/ JOB FOR EXCEPTION WAIT  */
    SELECT 
        JOB_ID,
        EXCEPTION_DATE,
        SUM(DURATION)/60 AS EXCEPTION_WAIT_DUR_HR
    FROM EXCEPTIONS
    GROUP BY JOB_ID, EXCEPTION_DATE
)

/* QUESTION: FOR RIG AUDITS, DO WE USE ALL EXCEPTION: WAIT (KV NPT) OR JUST RIG > UNSCHEDULED WHICH IS WHAT HESS LOOKS FOR?
*/

, HESS_RIG_JOB AS (
    SELECT DISTINCT 
        RIG,
        JobNumber,
        ACTIVITYDATE
    FROM HESS_ACTIVITIES
)

, JOB_EXCEPTIONS AS (
    SELECT 
        H.RIG,
        H.JOBNUMBER, 
        H.ACTIVITYDATE AS WORKDATE,
        CASE WHEN E.EXCEPTION_WAIT_DUR_HR IS NULL THEN 0 ELSE E.EXCEPTION_WAIT_DUR_HR END AS EXCEPTION_WAIT_DUR_HR
    FROM HESS_RIG_JOB H 
    LEFT JOIN EXCEPTION_WAIT E ON (H.JOBNUMBER = E.JOB_ID AND H.ACTIVITYDATE = E.EXCEPTION_DATE)
)

, RIG_DAILY_EXCEPT AS (
    SELECT 
        RIG,
        WORKDATE,
        SUM(EXCEPTION_WAIT_DUR_HR) AS DAILY_WAIT_DUR_HR
    FROM JOB_EXCEPTIONS
    GROUP BY RIG, WORKDATE 
)

, COMBINE_ACT_EXCEPT_LABOR AS (
    /* COMBINE THE ACTIVITY, EXEPTION AND LABOR DURATIONS AND FLAG FOR WORKING DAYS */
    SELECT 
        H.OPDATE AS CALENDAR_DATE,
        H.RIG,
        H.RIGTYPE,
        EOMONTH(H.OPDATE) AS WORK_MONTH,
        CASE WHEN C.DAILY_ACTIVITIES IS NULL THEN NULL ELSE WORK_DATE END AS WORK_DATE, -- IF NO ACTIVITIES THEN SHOULD NOT BE A WORK DATE
        CASE WHEN C.DAILY_ACTIVITIES IS NULL THEN 0 ELSE C.DAILY_ACTIVITIES END AS DAILY_ACTIVITIES, -- SETS NULL TO 0
        CASE WHEN C.DAILY_DURATION_HR IS NULL THEN 0 ELSE C.DAILY_DURATION_HR END AS DAILY_DURATION_HR,
        CASE WHEN E.DAILY_WAIT_DUR_HR IS NULL THEN 0 ELSE E.DAILY_WAIT_DUR_HR END AS DAILY_WAIT_DUR_HR,
        CASE WHEN C.DAILY_DURATION_HR - E.DAILY_WAIT_DUR_HR IS NULL THEN 0 ELSE C.DAILY_DURATION_HR - E.DAILY_WAIT_DUR_HR END AS ACTIVTY_MINUS_WAIT_DUR,
        CASE 
            WHEN C.DAILY_DURATION_HR - E.DAILY_WAIT_DUR_HR = 0 THEN 'Not Working' 
            WHEN C.DAILY_DURATION_HR IS NULL THEN 'Not Working' 
            ELSE 'Working' END AS WORKING_WAIT, -- WORKING DAY FLAG, IF ACTIVITY DURATION = EXCEPTION DURAITON THEN NOT A WORKIGN DAY
        C.DAILY_CREW_COUNT,
        C.DAILY_CREW_DURATION,
        C.AVG_DAILY_WORKER_DUR
    FROM HESS_RIGS_TYPE H 
    LEFT JOIN RIG_CREW C ON (H.RIG = C.RIG AND H.OPDATE = C.WORK_DATE)
    LEFT JOIN RIG_DAILY_EXCEPT E ON (C.RIG = E.RIG AND H.OPDATE = E.WORKDATE) 
)


/* NOTE: GET INSPECTION INFORMATION */
, FIFTEEN_MIN_RPTS AS (
    /* DETERMINE IF EACH RIG WORKED DAY HAS A 15-MIN REPORT */
    SELECT DISTINCT 
        ASSETNUM AS RIG,
        CONVERT(DATE, DATETIME) AS REPORT_START_DATE, --NOTE THAT THE REPORT_DATE IN AZURE IS ACTUALLY THE REPORT SUBMIT DATE, THIS IS THE ACTUAL DATE OF THE REPORT
        COUNT(DISTINCT DATETIME) AS DAILY_FIFT_INS_CNT
    FROM DBO.ISCOUT_160405 M
    INNER JOIN HESS_RIGS H ON (M.ASSETNUM = H.RIG)
    WHERE YEAR(CONVERT(DATE, DATETIME)) = 2024
    GROUP BY ASSETNUM, DATETIME
)

, DAILY_INS AS (
    /* GET DAILY RIG REPORTS -- ALSO NOTE THIS TABLE IS NEW AND ONLY CAPTURES REPORTS FROM 6/3/24 FORWARD AS OF 6/21/24 */
    SELECT DISTINCT 
        S0_R22_assetNum AS RIG,
        CONVERT(DATE, S0_R16_DATETIME) AS REPORT_DATE, --NOTE THAT THE REPORT_DATE IN AZURE IS ACTUALLY THE REPORT SUBMIT DATE, THIS IS THE ACTUAL DATE OF THE REPORT
        COUNT(DISTINCT CONVERT(DATE, S0_R16_DATETIME)) AS DAILY_INS_COUNT
    FROM DBO.ISCOUT_DAILY_RIG_INSPECTION_VIEW V
    INNER JOIN HESS_RIGS H ON (V.S0_R22_assetNum = H.RIG )
    WHERE YEAR(CONVERT(DATE, S0_R16_DATETIME)) = 2024 
    GROUP BY S0_R22_assetNum, CONVERT(DATE, S0_R16_DATETIME)
)

, INSPECTIONS AS (
    SELECT 
        C.RIG,
        C.WORK_DATE,
        C.WORK_MONTH,
        F.DAILY_FIFT_INS_CNT,
        I.DAILY_INS_COUNT
    FROM RIG_CREW C 
    LEFT JOIN FIFTEEN_MIN_RPTS F ON (C.RIG = F.RIG AND C.WORK_DATE = F.REPORT_START_DATE)
    LEFT JOIN DAILY_INS I ON (C.RIG = I.RIG AND C.WORK_DATE = I.REPORT_DATE)
)


, DATASET AS (
    /* START WITH ALL DATES FROM THE CALENDAR CTE, THIS WILL  */
    SELECT 
        C.CALENDAR_DATE,
        C.RIG,
        C.RIGTYPE,
        C.WORK_DATE,
        FORMAT(C.WORK_DATE, 'MM/dd/yyyy') AS WORK_DATE_TXT,
        FORMAT(C.WORK_MONTH, 'MM-yyyy') AS WORK_MONTH_TXT,
        C.DAILY_ACTIVITIES,
        C.DAILY_DURATION_HR AS DAILY_ACTIVITY_DUR_HR,
        C.DAILY_WAIT_DUR_HR,
        C.ACTIVTY_MINUS_WAIT_DUR,
        C.WORKING_WAIT, 
        CASE WHEN C.DAILY_DURATION_HR >= 4 AND C.ACTIVTY_MINUS_WAIT_DUR <> 0 THEN 'Y' ELSE 'N' END AS DAILY_FIFTEEN_MIN_INSP_REQ,
        CASE WHEN I.DAILY_FIFT_INS_CNT = 1 THEN 'Y' ELSE 'N' END AS DAILY_FIFTEEN_MIN_INSP,
        CASE WHEN I.DAILY_INS_COUNT = 1 THEN 'Y' ELSE 'N' END AS DAILY_INSP,
        C.DAILY_CREW_COUNT,
        C.DAILY_CREW_DURATION,
        C.AVG_DAILY_WORKER_DUR,
        D.LOCO_CODE,
        D.LOCO_NAME,
        D.MKTP_CODE,
        D.MKTP_NAME,
        D.YARD_CODE,
        CASE 
            WHEN D.YARD_NAME = 'Tioga, ND (Rigs)' THEN 'Tioga, ND' 
            WHEN D.YARD_NAME = 'Tioga, ND (Cementing/P and A)' THEN 'Tioga, ND'
            WHEN D.YARD_NAME = 'Williston, ND (Rigs)' THEN 'Williston, ND'
            ELSE D.YARD_NAME END AS YARD_NAME
    FROM COMBINE_ACT_EXCEPT_LABOR C 
    LEFT JOIN INSPECTIONS I ON (C.RIG = I.RIG AND C.CALENDAR_DATE = I.WORK_DATE)
    LEFT JOIN RIG_DETAIL D ON (C.RIG = D.RIG)
)

SELECT * FROM DATASET
;
GO

