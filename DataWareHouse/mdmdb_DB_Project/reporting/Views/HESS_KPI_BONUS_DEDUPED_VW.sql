CREATE VIEW [reporting].[HESS_KPI_BONUS_DEDUPED_VW] AS 

/* THIS UTILIZES THE ORIGINAL HESS_KPI_BONUS_EMPLOYEE_VW TO REMOVE DUPLICATE MONTHLY BONUSES CAUSED BY RIGS HAVING MORE THAN A SINGLE RIG TYPE -- SUCH AS SWING RIGS */
WITH KPI_BONUS AS (
    -- GATHER ALL RESULTS FROM THE VIEW 
    SELECT 
        *
    FROM REPORTING.HESS_KPI_BONUS_EMPLOYEE_VW
    WHERE REPORT_PULL_DATE > '2024-05-16' AND PAYOUT_RANK = 1 AND RIG_NUM_RANK = 1 AND EE_BONUS IS NOT NULL AND INC_IN_BONUS = 'Y'
)

, DUPLICATES AS (
    -- FIND THE WORKMONHT, EIN COMBINATIONS THAT ARE DUPLICATED AND CREATE A NEW RIG TYPE CALLED "MIXED_TYPE" THAT DENOTES IT IS DAILYIGHT AND 24H
    SELECT 
        WORKMONTH,
        EIN,
        'MIXED_TYPE' AS RIG_TYPE
    FROM (
        SELECT 
            WORKMONTH,
            EIN,
            DURATION_RANK,
            RIG_TYPE,
            ROW_NUMBER() OVER (PARTITION BY EIN, WORKMONTH, DURATION_RANK ORDER BY RIG_TYPE) AS ROWCNT  -- THIS WILL HELP ELIMINATE THE ROWS WITH DUPLICATE RIG #'S
        FROM KPI_BONUS ) D 
        WHERE ROWCNT = 2
)

, FINAL_KPI_BONUS AS (
    -- THE DISTINT FUNCTION SHOULD RETURN A SINLGE INSTANCE OF A WORKMONTH TO EIN MATCH 
    SELECT DISTINCT * 
    FROM (
        SELECT 
            B.WORKMONTH,
            B.EIN,
            B.FIRST_NAME,
            B.LAST_NAME,
            B.EMAIL,
            B.JOB_CODE,
            B.JOB_FAMILY,
            B.HIRE_DATE,
            B.LOCO_CODE,
            B.YARD_NAME,
            B.RIG_WORKED_MOST,
            CASE WHEN D.RIG_TYPE = 'MIXED_TYPE' THEN 'Mixed Type' ELSE B.RIG_TYPE END AS RIG_TYPE,
            B.MONTHLY_DAYS_WORKED,
            B.DAILYPAYOUT AS KPI_DAILY_PAYOUT,
            B.EE_BONUS AS PROJ_KPI_BONUS
        FROM KPI_BONUS B 
        LEFT JOIN DUPLICATES D ON (B.WORKMONTH = D.WORKMONTH AND B.EIN = D.EIN)
    ) B 
)


SELECT * FROM FINAL_KPI_BONUS 
;
GO

