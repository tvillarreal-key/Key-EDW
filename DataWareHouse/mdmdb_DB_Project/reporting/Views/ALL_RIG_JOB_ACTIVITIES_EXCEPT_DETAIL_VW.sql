CREATE VIEW [reporting].[ALL_RIG_JOB_ACTIVITIES_EXCEPT_DETAIL_VW] AS 

WITH ACTIVITIES AS (
    /* GET ALL RIG ACTIVITIES */
    SELECT
        CASE 
            WHEN CHARINDEX('/', TRIM('/' FROM CUSTOMERORGUNIT)) = 0 THEN TRIM('/' FROM CUSTOMERORGUNIT)
            ELSE LEFT(TRIM('/' FROM CUSTOMERORGUNIT), CHARINDEX('/', TRIM('/' FROM CUSTOMERORGUNIT)) - 1) 
            END AS CUSTOMER,
        CASE 
            WHEN CHARINDEX('/', TRIM('/' FROM CUSTOMERORGUNIT)) = 0 THEN ''
            ELSE RIGHT(TRIM('/' FROM CUSTOMERORGUNIT), LEN(TRIM('/' FROM CUSTOMERORGUNIT)) - CHARINDEX('/', TRIM('/' FROM CUSTOMERORGUNIT))) 
            END AS CUSTOMER_DIVISION,
        JOBNUMBER,
        FORMAT(CONVERT(NUMERIC,RIG), '0000000') AS RIG,
        WELL_NAME,
        WORKINGDEPTH,
        WELLBORECONFIG,
        WORKTYPE,
        JOBTYPE,
        JOBSTARTTIME,
        CASE 
            WHEN CONVERT(TIME,A.JOBENDTIME) = '00:00:00' THEN DATEADD(S,-1,A.JOBENDTIME) -- JOB CROSS MIDNIGHT, NEED TO KEEP IT IN THE SAME DAY - THIS IS REALLY FOR JOBS ENDING LAST DAY OF MONTH
            ELSE A.JOBENDTIME END AS JOBENDTIME,
        ACTIVITY_NUMBER,
        ACTIVITYDESCRIPTION,
        ACTIVITY_DESCRIPTION,
        ACTIVITYSTARTTIME,
        CASE 
            WHEN CONVERT(TIME,ACTIVITYENDTIME) = '00:00:00' THEN DATEADD(S,-1, ACTIVITYENDTIME) --ACTIVITY CROSSED MIDNIGHT, NEED TO KEEP IN SAME DAY
            ELSE ACTIVITYENDTIME END AS ACTIVITYENDTIME, 
        CASE 
            WHEN CONVERT(TIME,ACTIVITYENDTIME) = '00:00:00' THEN CONVERT(DATE, DATEADD(S,-1, ACTIVITYENDTIME)) --ACTIVITY CROSSED MIDNIGHT, NEED TO KEEP IN SAME DAY
            ELSE CONVERT(DATE,ACTIVITYENDTIME) END AS ACT_DATE, 
        DURATIONMINUTES
    FROM DBO.KEYVIEW_ACTIVITIES2 A 
    WHERE (A.JOBENDTIME > EOMONTH(DATEADD(M,-14,GETDATE())) OR A.JOBENDTIME IS NULL) AND 
        ACTIVITYENDTIME IS NOT NULL AND -- 13 MONTH LOOKBACK OR OPEN JOBS
        CUSTOMERORGUNIT <> '////' -- THESE APPEAR TO BE TEST CASES WITH RIG '6666'
)

/* CALCULATE THE FIRST RIG UP AND LAST RIG DOWN PER JOB */
, RIGUP AS (
    SELECT 
        JOBNUMBER,
        MIN(ACTIVITYSTARTTIME) AS RUSU
    FROM ACTIVITIES
    WHERE ACTIVITY_DESCRIPTION = 'RUSU'
    GROUP BY JOBNUMBER
)

, RIGDOWN AS (
    SELECT 
        JOBNUMBER,
        MAX(ACTIVITYENDTIME) AS RDSU
    FROM ACTIVITIES
    WHERE ACTIVITY_DESCRIPTION = 'RDSU'
    GROUP BY JOBNUMBER

)

, RIGS AS (
    /* GET RIG MODEL YEAR TO HELP DETERMINE EQUIPMENT AGE */
    SELECT 
        ASSET_NUM AS RIG,
        STATUS AS RIG_STATUS,
        MODEL_YEAR
    FROM DBO.MDM_Assets
    WHERE Asset_Class = 'Rig' 
)

, EXCEPTIONS AS (
    /* NOTE: GET EXCEPTIONS ASSOCIATED WITH THE JOB ACTIVITIES ABOVE */
    SELECT 
        E.*,
        CASE
            WHEN EXCEPTION_TYPE = 'Exception: wait' AND UPPER(ACTIVITYDESCRIPTION) LIKE '%STANDBY%'  AND UPPER(WAIT_CATEGORY) = 'WEATHER' THEN 'LPT' 
            WHEN EXCEPTION_TYPE = 'Exception: wait' AND UPPER(WAIT_CATEGORY) = 'RIG' THEN 'KV NPT/ Hess NPT'
            WHEN EXCEPTION_TYPE = 'Exception: wait' AND UPPER(ACTIVITYDESCRIPTION) NOT LIKE '%STANDBY%' AND UPPER(WAIT_CATEGORY) <> 'RIG' THEN 'KV NPT'
            ELSE 'NO NPT' END AS NPT_TYPE
    FROM ( 
        SELECT 
            E.ACTIVITY_NUMBER,
            EXCEPTION_NUMBER,
            START_TIME,
            CASE WHEN CONVERT(TIME,END_TIME) = '00:00:00' THEN DATEADD(S,-1,END_TIME) ELSE END_TIME END AS END_TIME,
            CASE WHEN CONVERT(TIME,END_TIME) = '00:00:00' THEN FORMAT(DATEADD(S,-1,END_TIME),'07-2024') ELSE FORMAT(END_TIME,'07-2024') END AS END_MONTH,
            EXCEPTION_TYPE,
            DURATION AS EXCEPTION_DURATION_MIN,
            CASE WHEN EXCEPTION_TYPE = 'Exception: wait' THEN DURATION ELSE 0 END AS EXCEPT_WAIT_DUR,
            CASE WHEN VARIANCE_DESC_01 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_01 END AS WAIT_CATEGORY,
            CASE WHEN VARIANCE_DESC_02 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_02 END AS RESP_EQUIP_OR_SVC,
            CASE WHEN VARIANCE_DESC_03 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_03 END AS VENDOR,
            CASE WHEN VARIANCE_DESC_04 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_04 END AS WAIT_REASON,
            CASE WHEN VARIANCE_DESC_05 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_05 END AS ROOT_CAUSE,
            NOTE_TEXT AS COMMENTS
        FROM DBO.KEYVIEW_JOB_ACTIVITY_EXCEPTION E 
    ) E
    INNER JOIN ACTIVITIES A ON (E.ACTIVITY_NUMBER = A.ACTIVITY_NUMBER)
)

/* NOTE: CREATE CODE TO COMPUTE THE TOTAL NUMBER OF DAYS AN EMPLOYEE WORKED FOR KEY  */

,  EMP_DATES AS (
    /* ESTABLISH ORIGINAL HIRE DATE */
    SELECT DISTINCT 
        EMPLOYEEID AS EIN, 
        'HIR' AS HR_ACTION,
        ORGINALDATEOFHIRE AS ACTION_DATE
    FROM  DBO.ADP_TRANSACTIONS
    UNION 
    /* ESTABLISH TERMINATION AND REHIRE DATES */
    SELECT 
        EMPLOYEEID AS EIN,
        ACTION AS HR_ACTION,
        EFFECTIVEDATE AS ACTION_DATE
    FROM DBO.ADP_TRANSACTIONS
    WHERE ACTION IN ('TER','REH')
)

, EMP_PERIODS AS (
    /* CALCULATE THE NUMBER OF DAYS BETWEEN HIRE AND TERMINATION DATES (OR CURRENT DATE IF NO TERMINATION DATE) */
    SELECT 
        EIN,
        CASE 
            WHEN HR_ACTION IN ('HIR','REH') AND LEAD(ACTION_DATE) OVER(PARTITION BY EIN ORDER BY ACTION_DATE) IS NOT NULL THEN DATEDIFF(D, ACTION_DATE, LEAD(ACTION_DATE) OVER (PARTITION BY EIN ORDER BY ACTION_DATE))
            WHEN HR_ACTION IN ('HIR','REH') AND LEAD(ACTION_DATE) OVER(PARTITION BY EIN ORDER BY ACTION_DATE) IS NULL THEN DATEDIFF(D, ACTION_DATE, GETDATE())
            ELSE 0 END AS DAYS_EMPLOYED
    FROM EMP_DATES
)

,  EMP_DAYS AS (
    /* SUM UP THE TOTAL NUMBER OF DAYS EMPLOYEE WORKED FOR KEY ENERGY SERVICES */
    SELECT 
        EIN,
        SUM(DAYS_EMPLOYED) AS KEY_DAYS_EMPLOYED 
    FROM EMP_PERIODS
    GROUP BY EIN 
)
/* END OF EMPLOYMENT CALCULATION CODE */

, RIG_WORKER_INFORMATION AS (
    /* CALCULATE CREW STATISTICS PER RIG AND WORK DAY*/
    SELECT 
        L.ASSET_NUMBER AS RIG,
        CONVERT(DATE,L.WORK_DATE) AS WORK_DATE,
        L.EMPLOYEE_ID AS EIN,
        L.DURATION AS DAILY_EMP_DURATION,
        E.KEY_DAYS_EMPLOYED
    FROM DBO.LABORINCREMENTAL2 L 
    LEFT JOIN EMP_DAYS E ON (L.EMPLOYEE_ID = E.EIN)
)

, CREW_INFORMATION AS ( 
    SELECT 
        RIG,
        WORK_DATE,
        COUNT(DISTINCT EIN) AS CREW_SIZE, 
        SUM(DAILY_EMP_DURATION) AS TOT_DAILY_CREW_DURATION, -- DURATION CREW WORKED ON THE RIG 
        SUM(KEY_DAYS_EMPLOYED) AS TOT_CREW_KEY_EMPL_DAYS, -- KEY SPECIFIC EXPERIENCE
        SUM(KEY_DAYS_EMPLOYED) / COUNT(DISTINCT EIN) AS AVG_CREW_KEY_EMPL_DAYS -- KEY SPECIFIC EXPERIENCE
    FROM RIG_WORKER_INFORMATION
    GROUP BY RIG, WORK_DATE 
)


, DATASET AS (
    /* COMPOSE FINAL DATASET */
    /* NOTE: EXCEPTION_DURATIONMINUTES COMES FROM THE KEYVIEW ACTIVITIES2 TABLE AND NOT THE ACTUAL EXCEPTIONS TABLE */
    SELECT 
        A.*,
        R.MODEL_YEAR,
        R.RIG_STATUS,
        U.RUSU,
        D.RDSU,
        CASE WHEN U.RUSU IS NULL THEN 'No Rig Up' ELSE 'Rig Up' END AS RIG_UP_FLAG,
        E.EXCEPTION_NUMBER, 
        E.START_TIME AS EXCEPT_START_TIME,
        E.END_TIME AS EXCEPT_END_TIME,
        E.END_MONTH AS EXCEPT_END_MONTH,
        E.EXCEPTION_TYPE,
        CASE WHEN E.EXCEPTION_DURATION_MIN IS NULL THEN 0 ELSE E.EXCEPTION_DURATION_MIN END AS EXCEPT_DURATION_MIN,
        CASE WHEN E.EXCEPTION_DURATION_MIN IS NULL THEN 0 ELSE E.EXCEPTION_DURATION_MIN/60 END AS EXCEPT_DURATION_HR,
        E.EXCEPT_WAIT_DUR,
        CASE 
            WHEN E.EXCEPT_WAIT_DUR IS NULL THEN A.DURATIONMINUTES 
            WHEN E.EXCEPT_WAIT_DUR IS NOT NULL THEN A.DURATIONMINUTES - E.EXCEPT_WAIT_DUR
            ELSE 0 END AS DURATION_WO_DELAY_MIN,
        CASE 
            WHEN E.EXCEPT_WAIT_DUR IS NULL THEN A.DURATIONMINUTES / 60
            WHEN E.EXCEPT_WAIT_DUR IS NOT NULL THEN (A.DURATIONMINUTES - E.EXCEPT_WAIT_DUR) / 60 
            ELSE 0 END AS DURATION_WO_DELAY_HR,
        E.WAIT_CATEGORY,
        E.WAIT_REASON,
        E.RESP_EQUIP_OR_SVC,
        E.VENDOR,
        E.ROOT_CAUSE,
        E.NPT_TYPE,
        E.COMMENTS AS EXCEPTION_COMMENTS,
        C.WORK_DATE,
        C.CREW_SIZE,
        C.TOT_DAILY_CREW_DURATION, -- DURATION CREW WORKED ON THE RIG 
        C.TOT_CREW_KEY_EMPL_DAYS, -- KEY SPECIFIC EXPERIENCE
        C.AVG_CREW_KEY_EMPL_DAYS -- KEY SPECIFIC EXPERIENCE 
    FROM ACTIVITIES A 
    LEFT JOIN RIGUP U ON (A.JOBNUMBER = U.JOBNUMBER)
    LEFT JOIN RIGDOWN D ON (A.JOBNUMBER = D.JOBNUMBER)
    LEFT JOIN RIGS R ON (A.RIG = R.RIG)
    LEFT JOIN EXCEPTIONS E ON (A.ACTIVITY_NUMBER = E.ACTIVITY_NUMBER)
    LEFT JOIN CREW_INFORMATION C ON (A.RIG = C.RIG AND A.ACT_DATE= C.WORK_DATE)
)

SELECT * FROM DATASET 
;
GO

