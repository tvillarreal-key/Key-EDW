CREATE VIEW [reporting].[HESS_ORIG_RIG_LAST_ACTIVITY_ENDTIME_VW] AS 

WITH __SWING_ACT__ AS (
    /*  GET ALL SWING RIG ACTIVITIES TO DETERMINE WHICH JOBNUMBERS CHANGED, 
        IF THE JOB NUMBER DIDN'T CHANGE THEN THE ORIGINAL RIG BROKE BEFORE IT RIGGED UP, SO
        CYCLE TIME IS NOT AFFECTED
    */
    SELECT * FROM REPORTING.HESS_SWING_RIG_ACTIVITIES_VW
)

, __CHANGED_JOBNUMBERS__ AS (
    /* ISOLATE THE CHANGED JOB NUMBERS */
    SELECT DISTINCT 
        JOB_NUMBER_DIFF
    FROM __SWING_ACT__
    WHERE JOB_NUMBER_DIFF <> 'NA'
)

SELECT 
    A.RIG,
    A.JOBNUMBER,
    A.ACTIVITYDESCRIPTION,
    A.ACTIVITY_ABBR,
    A.ACTIVITYENDTIME 
FROM (
    SELECT 
        FORMAT(CONVERT(INT, RIG), '0000000') AS RIG,
        JOBNUMBER,
        ACTIVITYDESCRIPTION,
        ACTIVITY_DESCRIPTION AS ACTIVITY_ABBR,
        ACTIVITYSTARTTIME,
        ACTIVITYENDTIME,
        /*  THERE ARE STRANGE SCENARIOS WHEN THERE ARE MATHCING ACTIVITYENDTIMES, 
            BUT THE STARTTIME= ENDTIME SO THE STARTTIME IS A BETTER INDICATOR OF THE LAST ACTIVITY 
        */
        MAX(ACTIVITYSTARTTIME) OVER (PARTITION BY JOBNUMBER) AS MAX_STARTTIME 
    FROM DBO.KEYVIEW_ACTIVITIES2 A 
    INNER JOIN __CHANGED_JOBNUMBERS__ C ON (A.JOBNUMBER = C.JOB_NUMBER_DIFF) -- ONLY INTERESTED IN THE ORIGINAL JOB NUMBERS THAT DIDN'T CARRY OVER THE SWING RIG
    WHERE JOBENDTIME > DATEADD(D, 1, EOMONTH(DATEADD(M, -14, GETDATE())))
) AS A 
WHERE A.ACTIVITYSTARTTIME = MAX_STARTTIME 

;
GO

