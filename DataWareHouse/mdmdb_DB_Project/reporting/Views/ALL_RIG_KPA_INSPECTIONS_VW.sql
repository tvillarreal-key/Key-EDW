CREATE VIEW [reporting].[ALL_RIG_KPA_INSPECTIONS_VW] AS 

/* NOTE GRAB ALL RIGS/ ACTIVITIES */
WITH RIG_ACTIVITIES AS (
    /* GATHER ALL ACTIVITY FOR HESS RIGS, MAKE SURE TO BACK OFF 1 SECOND FOR ANY ACTIVITIES ENDING AT MIDNIGHT TO KEEP THEM IN THE CORRECT DAY */
    SELECT 
        FORMAT(CONVERT(INT, RIG), '0000000') AS RIG,
        JOBNUMBER,
        ACTIVITY_NUMBER,
        ACTIVITYSTARTTIME,
        CASE WHEN CONVERT(TIME,ACTIVITYENDTIME) = '00:00:00.000' THEN CONVERT(DATE,DATEADD(S,-1,ACTIVITYENDTIME)) ELSE CONVERT(DATE,ACTIVITYENDTIME) END AS ACTIVITYDATE,
        CASE WHEN CONVERT(TIME,ACTIVITYENDTIME) = '00:00:00.000' THEN EOMONTH(DATEADD(S,-1,ACTIVITYENDTIME)) ELSE EOMONTH(ACTIVITYENDTIME) END AS ACTIVITYMONTH,
        ACTIVITY_DESCRIPTION AS ACTIVITYABBREV,
        ACTIVITYDESCRIPTION AS ACTIVITYDESC,
        DURATIONMINUTES
    FROM DBO.KEYVIEW_ACTIVITIES2 A 
    WHERE ACTIVITYENDTIME IS NOT NULL  --NULL ENDTIME MEANS IT IS AN OPEN ACTIIVTY SO IT SHOULD NOT BE INCLUDED IN THE REPORT
        AND ACTIVITYSTARTTIME >= '2024-01-01 00:00:00' -- ONLY INCLUDE CLOSED ACTIVITIES THAT START AFTER 1/1/24
)

, DATETABLE AS (
    /* NOTE: CROSS JOIN ALL RIG NUMBERS WITH ALL DATES TO FORM A RIG CALENDAR TABLE AND SCAFFOLD DATA FOR REPORTING */
    SELECT 
        D.OPDATE,
        R.RIG 
    FROM (SELECT DISTINCT CONVERT(DATE, ACTIVITYSTARTTIME) AS OPDATE FROM RIG_ACTIVITIES) D 
    CROSS JOIN ( SELECT DISTINCT RIG FROM RIG_ACTIVITIES) R 
)

/* GET RIG DETAILS */
, RIG_DETAIL AS (
    SELECT 
        ASSET_NUM AS RIG,
        ASSET_CLASS,
        LOCO_CODE,
        LOCO_NAME,
        MKTP_CODE,
        MKTP_NAME,
        YARD_CODE,
        YARD_NAME 
    FROM DBO.MDM_ASSETS A
    WHERE ASSET_CLASS = 'Rig'
)

, DAILY_JOB AS (
    /* CALCULATE THE DAILY SUMARIES OF ACTIVITIES AND DURATION BY RIG/ JOB */
    SELECT 
        RIG,
        JOBNUMBER,
        ACTIVITYMONTH,
        ACTIVITYDATE,
        COUNT(DISTINCT ACTIVITY_NUMBER) AS DAILY_ACTIVITIES,
        SUM(DURATIONMINUTES)/60 AS DAILY_DURATION_HR
    FROM RIG_ACTIVITIES
    GROUP BY RIG, JOBNUMBER, ACTIVITYMONTH, ACTIVITYDATE
)

, DAILY_RIG AS (
    SELECT 
        RIG,
        ACTIVITYMONTH,
        ACTIVITYDATE,
        COUNT(DISTINCT ACTIVITY_NUMBER) AS DAILY_ACTIVITIES,
        SUM(DURATIONMINUTES)/60 AS DAILY_DURATION_HR
    FROM RIG_ACTIVITIES
    GROUP BY RIG, ACTIVITYMONTH, ACTIVITYDATE
)

/* GET ALL LABOR THAT PERTAINS TO RIGS */
, LABOR AS (
    SELECT 
        L.*
    FROM (
        SELECT 
            CASE 
                WHEN TRY_CONVERT(INT, ASSET_NUMBER) IS NULL THEN NULL 
                    ELSE FORMAT(CONVERT(INT,ASSET_NUMBER), '0000000') 
                END AS ASSET_NUM,
            WORK_DATE,
        CASE 
            WHEN TRY_CONVERT(INT, CUSTOMER_ORDER_ID) IS NULL THEN '0000000' 
            ELSE FORMAT(CONVERT(INT, CUSTOMER_ORDER_ID),'0000000') 
            END AS CUSTOMER_ORDER_ID, -- FORMAT TO ALWAYS BE 7 CHARS WITH LEADING 0'S
        CASE 
            WHEN TRY_CONVERT(INT, CUSTOMER_ORDER_ID) IS NULL THEN 'POSSIBLE ERROR' 
            ELSE 'PASS' 
            END AS CUSTOMER_ORDER_ID_TEST, -- IF SOMEONE PUT THE CUSTOMER NAME INSTEAD OF ACCOUNT NUMBER IN THE FIELD
            EMPLOYEE_ID AS EIN,
            DURATION
        FROM DBO.LABORINCREMENTAL2 L
        WHERE LEN(ASSET_NUMBER) <= 7 AND WORK_DATE >= '2024-01-01 00:00:00' -- THERE ARE SOME ODD ASSET NUMBERS WHEN NO RIG SHOULD BE LONGER THAN 7 CHARS
        ) L
    INNER JOIN RIG_DETAIL D ON (L.ASSET_NUM = D.RIG AND L.ASSET_NUM IS NOT NULL)
)


, CREW AS (
    /* GET CREW INFORMATION BY DATE RIG JOB AND REMOVE UNWANTED ASSETS */
    SELECT 
        ASSET_NUM,
        WORK_DATE,
        CUSTOMER_ORDER_ID,
        CUSTOMER_ORDER_ID_TEST,
        EIN,
        SUM(DURATION) AS WORKER_DURATION_HR
    FROM LABOR
    GROUP BY ASSET_NUM, WORK_DATE, CUSTOMER_ORDER_ID, CUSTOMER_ORDER_ID_TEST, EIN  
)

, DAILY_CREW AS (
    SELECT 
        ASSET_NUM,
        WORK_DATE,
        CUSTOMER_ORDER_ID,
        CUSTOMER_ORDER_ID_TEST,
        COUNT(DISTINCT EIN) AS DAILY_CREW_COUNT,
        SUM(WORKER_DURATION_HR) AS DAILY_CREW_DURATION
    FROM CREW
    GROUP BY ASSET_NUM, WORK_DATE, CUSTOMER_ORDER_ID, CUSTOMER_ORDER_ID_TEST
)


, RIG_CREW AS (
    /* COMBINE THE RIG AND CREW INFORMATION */
    SELECT 
        R.RIG,
        R.ACTIVITYDATE AS WORK_DATE,
        R.ACTIVITYMONTH AS WORK_MONTH,
        R.DAILY_ACTIVITIES,
        R.DAILY_DURATION_HR,
        C.CUSTOMER_ORDER_ID,
        C.CUSTOMER_ORDER_ID_TEST,
        C.DAILY_CREW_COUNT,
        C.DAILY_CREW_DURATION,
        C.DAILY_CREW_DURATION/ C.DAILY_CREW_COUNT AS AVG_DAILY_WORKER_DUR
    FROM DAILY_RIG R 
    LEFT JOIN DAILY_CREW C ON (R.RIG = C.ASSET_NUM AND R.ACTIVITYDATE = C.WORK_DATE)

)

, EXCEPTIONS AS (
    SELECT
        JOB_ID,
        ACTIVITY_NUMBER,
        EXCEPTION_TYPE,
        CONVERT(DATE,END_TIME) AS EXCEPTION_DATE,
        VARIANCE_DESC_01 AS WAIT_CATEGORY,
        VARIANCE_DESC_04 AS WAIT_REASON,
        VARIANCE_DESC_05 AS ROOT_CAUSE ,
        DURATION
    FROM DBO.KEYVIEW_JOB_ACTIVITY_EXCEPTION
    WHERE EXCEPTION_TYPE LIKE '%wait%' AND YEAR(END_TIME) = 2024
)

, EXCEPTION_WAIT AS (
    /* SUM UP DURATION BY DATE/ JOB FOR EXCEPTION WAIT  */
    SELECT 
        JOB_ID,
        EXCEPTION_DATE,
        SUM(DURATION)/60 AS EXCEPTION_WAIT_DUR_HR
    FROM EXCEPTIONS
    GROUP BY JOB_ID, EXCEPTION_DATE
)

, RIG_JOB AS (
    SELECT DISTINCT 
        RIG,
        JOBNUMBER,
        ACTIVITYDATE
    FROM RIG_ACTIVITIES
)

, JOB_EXCEPTIONS AS (
    SELECT 
        R.RIG,
        R.JOBNUMBER, 
        R.ACTIVITYDATE AS WORKDATE,
        CASE WHEN E.EXCEPTION_WAIT_DUR_HR IS NULL THEN 0 ELSE E.EXCEPTION_WAIT_DUR_HR END AS EXCEPTION_WAIT_DUR_HR
    FROM RIG_JOB R 
    LEFT JOIN EXCEPTION_WAIT E ON (R.JOBNUMBER = E.JOB_ID AND R.ACTIVITYDATE = E.EXCEPTION_DATE)
)

, RIG_DAILY_EXCEPT AS (
    SELECT 
        RIG,
        WORKDATE,
        SUM(EXCEPTION_WAIT_DUR_HR) AS DAILY_WAIT_DUR_HR
    FROM JOB_EXCEPTIONS
    GROUP BY RIG, WORKDATE 
)

, COMBINE_ACT_EXCEPT_LABOR AS (
    /* COMBINE THE ACTIVITY, EXEPTION AND LABOR DURATIONS AND FLAG FOR WORKING DAYS */
    SELECT 
        D.OPDATE AS CALENDAR_DATE,
        D.RIG,
        EOMONTH(D.OPDATE) AS WORK_MONTH,
        CASE WHEN C.DAILY_ACTIVITIES IS NULL THEN NULL ELSE WORK_DATE END AS WORK_DATE, -- IF NO ACTIVITIES THEN SHOULD NOT BE A WORK DATE
        CASE WHEN C.DAILY_ACTIVITIES IS NULL THEN 0 ELSE C.DAILY_ACTIVITIES END AS DAILY_ACTIVITIES, -- SETS NULL TO 0
        CASE WHEN C.DAILY_DURATION_HR IS NULL THEN 0 ELSE C.DAILY_DURATION_HR END AS DAILY_DURATION_HR,
        CASE WHEN E.DAILY_WAIT_DUR_HR IS NULL THEN 0 ELSE E.DAILY_WAIT_DUR_HR END AS DAILY_WAIT_DUR_HR,
        CASE WHEN C.DAILY_DURATION_HR - E.DAILY_WAIT_DUR_HR IS NULL THEN 0 ELSE C.DAILY_DURATION_HR - E.DAILY_WAIT_DUR_HR END AS ACTIVTY_MINUS_WAIT_DUR,
        CASE 
            WHEN C.DAILY_DURATION_HR - E.DAILY_WAIT_DUR_HR = 0 THEN 'Not Working' 
            WHEN C.DAILY_DURATION_HR IS NULL THEN 'Not Working' 
            ELSE 'Working' END AS WORKING_WAIT, -- WORKING DAY FLAG, IF ACTIVITY DURATION = EXCEPTION DURAITON THEN NOT A WORKIGN DAY
        C.CUSTOMER_ORDER_ID,
        C.CUSTOMER_ORDER_ID_TEST,
        C.DAILY_CREW_COUNT,
        C.DAILY_CREW_DURATION,
        C.AVG_DAILY_WORKER_DUR
    FROM DATETABLE D  
    LEFT JOIN RIG_CREW C ON (D.RIG = C.RIG AND D.OPDATE = C.WORK_DATE)
    LEFT JOIN RIG_DAILY_EXCEPT E ON (C.RIG = E.RIG AND D.OPDATE = E.WORKDATE) 
)


/* NOTE: GET INSPECTION INFORMATION */
, FIFTEEN_MIN_RPTS AS (
    /* DETERMINE IF EACH RIG WORKED DAY HAS A 15-MIN REPORT */
    SELECT DISTINCT 
        ASSETNUM AS RIG,
        CONVERT(DATE, DATETIME) AS REPORT_START_DATE, --NOTE THAT THE REPORT_DATE IN AZURE IS ACTUALLY THE REPORT SUBMIT DATE, THIS IS THE ACTUAL DATE OF THE REPORT
        COUNT(DISTINCT DATETIME) AS DAILY_FIFT_INS_CNT
    FROM DBO.ISCOUT_160405 M
    INNER JOIN RIG_ACTIVITIES R ON (M.ASSETNUM = R.RIG)
    WHERE YEAR(CONVERT(DATE, DATETIME)) = 2024
    GROUP BY ASSETNUM, DATETIME
)

, DAILY_INS AS (
    /* GET DAILY RIG REPORTS -- ALSO NOTE THIS TABLE IS NEW AND ONLY CAPTURES REPORTS FROM 6/3/24 FORWARD AS OF 6/21/24 */
    SELECT DISTINCT 
        S0_R22_assetNum AS RIG,
        CONVERT(DATE, S0_R16_DATETIME) AS REPORT_DATE, --NOTE THAT THE REPORT_DATE IN AZURE IS ACTUALLY THE REPORT SUBMIT DATE, THIS IS THE ACTUAL DATE OF THE REPORT
        COUNT(DISTINCT CONVERT(DATE, S0_R16_DATETIME)) AS DAILY_INS_COUNT
    FROM DBO.ISCOUT_DAILY_RIG_INSPECTION_VIEW V
    INNER JOIN RIG_ACTIVITIES R ON (V.S0_R22_assetNum = R.RIG )
    WHERE YEAR(CONVERT(DATE, S0_R16_DATETIME)) = 2024 
    GROUP BY S0_R22_assetNum, CONVERT(DATE, S0_R16_DATETIME)
)

, INSPECTIONS AS (
    SELECT 
        C.RIG,
        C.CUSTOMER_ORDER_ID,
        C.CUSTOMER_ORDER_ID_TEST,
        C.WORK_DATE,
        C.WORK_MONTH,
        F.DAILY_FIFT_INS_CNT,
        I.DAILY_INS_COUNT
    FROM RIG_CREW C 
    LEFT JOIN FIFTEEN_MIN_RPTS F ON (C.RIG = F.RIG AND C.WORK_DATE = F.REPORT_START_DATE)
    LEFT JOIN DAILY_INS I ON (C.RIG = I.RIG AND C.WORK_DATE = I.REPORT_DATE)
)

, DATASET AS (
    /* START WITH ALL DATES FROM THE CALENDAR CTE, THIS WILL  */
    SELECT 
        C.CALENDAR_DATE,
        C.RIG,
        C.WORK_DATE,
        C.CUSTOMER_ORDER_ID,
        CASE WHEN C.WORK_DATE IS NULL THEN NULL ELSE C.CUSTOMER_ORDER_ID_TEST END AS CUSTOMER_ORDER_ID_TEST,
        FORMAT(C.WORK_DATE, 'MM/dd/yyyy') AS WORK_DATE_TXT,
        FORMAT(C.WORK_MONTH, 'MM-yyyy') AS WORK_MONTH_TXT,
        C.DAILY_ACTIVITIES,
        C.DAILY_DURATION_HR AS DAILY_ACTIVITY_DUR_HR,
        C.DAILY_WAIT_DUR_HR,
        C.ACTIVTY_MINUS_WAIT_DUR,
        C.WORKING_WAIT, 
        C.DAILY_CREW_COUNT,
        C.DAILY_CREW_DURATION,
        C.AVG_DAILY_WORKER_DUR,
        CASE 
            WHEN (C.DAILY_CREW_DURATION IS NULL OR C.DAILY_CREW_DURATION = 0) THEN 'N'
            WHEN C.ACTIVTY_MINUS_WAIT_DUR >= 4 THEN 'Y' 
            ELSE 'N' END AS DAILY_FIFTEEN_MIN_INSP_REQ,
        CASE WHEN I.DAILY_FIFT_INS_CNT = 1 THEN 'Y' ELSE 'N' END AS DAILY_FIFTEEN_MIN_INSP,
        CASE WHEN I.DAILY_INS_COUNT = 1 THEN 'Y' ELSE 'N' END AS DAILY_INSP,
        D.LOCO_CODE,
        D.LOCO_NAME,
        D.MKTP_CODE,
        D.MKTP_NAME,
        D.YARD_CODE,
        CASE 
            WHEN D.YARD_NAME = 'Tioga, ND (Rigs)' THEN 'Tioga, ND' 
            WHEN D.YARD_NAME = 'Tioga, ND (Cementing/P and A)' THEN 'Tioga, ND'
            WHEN D.YARD_NAME = 'Williston, ND (Rigs)' THEN 'Williston, ND'
            ELSE D.YARD_NAME END AS YARD_NAME
    FROM COMBINE_ACT_EXCEPT_LABOR C 
    LEFT JOIN INSPECTIONS I ON (C.RIG = I.RIG AND C.CALENDAR_DATE = I.WORK_DATE)
    LEFT JOIN RIG_DETAIL D ON (C.RIG = D.RIG)
)

SELECT * FROM DATASET
;
GO

