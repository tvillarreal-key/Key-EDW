CREATE VIEW [reporting].[HESS_SWING_JOB_ACTIVITIES_EXCEPT_DETAIL_VW] AS 

/* -----------------  BEGIN CODE BLOCK ----------------- */
WITH __ACTIVITIES__ AS (
    SELECT * FROM REPORTING.HESS_SWING_RIG_ACTIVITIES_VW
)

, __EXCEPTIONS__ AS (
    /* NOTE: GET EXCEPTIONS ASSOCIATED WITH THE HESS ACTIVITIES ABOVE */
    SELECT 
        E.*
    FROM ( 
        SELECT 
            E.ACTIVITY_NUMBER,
            EXCEPTION_NUMBER,
            START_TIME,
            CASE WHEN CONVERT(TIME,END_TIME) = '00:00:00' THEN DATEADD(S,-1,END_TIME) ELSE END_TIME END AS END_TIME,
            EXCEPTION_TYPE,
            DURATION AS EXCEPTION_DURATION_MIN,
            CASE WHEN VARIANCE_DESC_01 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_01 END AS WAIT_CATEGORY,
            CASE WHEN VARIANCE_DESC_02 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_02 END AS RESP_EQUIP_OR_SVC,
            CASE WHEN VARIANCE_DESC_03 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_03 END AS VENDOR,
            CASE WHEN VARIANCE_DESC_04 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_04 END AS WAIT_REASON,
            CASE WHEN VARIANCE_DESC_05 IS NULL THEN 'Unspecified' ELSE VARIANCE_DESC_05 END AS ROOT_CAUSE,
            NOTE_TEXT AS COMMENTS
        FROM DBO.KEYVIEW_JOB_ACTIVITY_EXCEPTION E 
        WHERE END_TIME > EOMONTH(DATEADD(MONTH, -14, GETDATE()))
    ) E
    INNER JOIN __ACTIVITIES__ A ON (E.ACTIVITY_NUMBER = A.ACTIVITY_NUMBER)
)


, __DATASET__ AS (
    /* COMPOSE FINAL DATASET */
    /* NOTE: EXCEPTION_DURATIONMINUTES COMES FROM THE KEYVIEW ACTIVITIES2 TABLE AND NOT THE ACTUAL EXCEPTIONS TABLE */
    SELECT 
        A.*,
        E.EXCEPTION_NUMBER, 
        E.START_TIME AS EXCEPT_START_TIME,
        E.END_TIME AS EXCEPT_END_TIME,
        E.EXCEPTION_TYPE,
        CASE WHEN E.EXCEPTION_DURATION_MIN IS NULL THEN 0 ELSE E.EXCEPTION_DURATION_MIN END AS EXCEPT_DURATION_MIN,
        CASE WHEN E.EXCEPTION_DURATION_MIN IS NULL THEN 0 ELSE E.EXCEPTION_DURATION_MIN/60 END AS EXCEPT_DURATION_HR,
        E.WAIT_CATEGORY,
        E.WAIT_REASON,
        E.RESP_EQUIP_OR_SVC,
        E.VENDOR,
        E.ROOT_CAUSE,
        CASE 
            WHEN UPPER(WAIT_CATEGORY) = 'RIG' AND UPPER(WAIT_REASON) IN ('UNSCHEDULED','SCHEDULED') THEN 'KV NPT/ Hess NPT'
            WHEN UPPER(A.ACTIVITY_ABBR) = 'STANDBY' AND UPPER(WAIT_CATEGORY) = 'WEATHER' AND UPPER(ROOT_CAUSE) = 'UNPLANNED' THEN 'LPT'
            WHEN UPPER(EXCEPTION_TYPE) LIKE '%WAIT%' THEN 'KV NPT'
            ELSE 'NO NPT' END AS NPT_TYPE,
        E.COMMENTS
    FROM __ACTIVITIES__ A 
    LEFT JOIN __EXCEPTIONS__ E ON (A.ACTIVITY_NUMBER = E.ACTIVITY_NUMBER)
)

SELECT 
    *
FROM __DATASET__

;
GO

