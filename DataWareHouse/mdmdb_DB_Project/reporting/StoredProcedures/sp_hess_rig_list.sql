SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
DROP PROCEDURE IF EXISTS [reporting].[sp_hess_rig_list]
GO
CREATE PROCEDURE [reporting].[sp_hess_rig_list]
AS
BEGIN 

/*  -------------------------------------------------- UPDATE THE ASSETS TABLE ---------------------------------------------------- */
TRUNCATE TABLE reporting.Hess_Rig_List_Hist;

/* CREATE A VIEW SHOWING HESS RIG AND RIG TYPE BY DATE STARTING 01-01-2024 */

WITH LISTDATES(ALLDATES) AS (
    /* CREATE LIST OF CALENDAR DATES TO BACKFILL TO BEGINNING OF 2024*/
    SELECT 
        CONVERT(DATE,'2023-12-01') AS OPDATE 
    UNION ALL 
    SELECT  
        DATEADD(D, 1, ALLDATES)
    FROM LISTDATES 
    WHERE ALLDATES < CONVERT(DATE, GETDATE())
)

, __KV_ACTIVITIES__ AS (
    /* GET KEYVIEW ACTIVITIES JOB START AND END TIMES TO HELP DETERMINE IF A RIGTYPE SHOULD BE DFR/NR OR DAYLIGHT/ 24 HOUR */
    SELECT DISTINCT
        FORMAT(CONVERT(INT, RIG), '0000000') AS RIG,
        CONVERT(DATE, JOBENDTIME) AS JOBENDDATE,
        CONVERT(DATE, ACTIVITYENDTIME) AS ACTIVITYENDDATE
    FROM KEYVIEW_ACTIVITIES2 
    WHERE CUSTOMERORGUNIT LIKE '%HESS%' AND (JOBENDTIME > DATEADD(D, 1, EOMONTH(DATEADD(M, -14, GETDATE()))) OR JOBENDTIME IS NULL ) AND JOBNUMBER = '525882'
)

, __RIG_COUNT_STAGE_ETL__ AS (
        /* GET HESS RIGS ONLY FROM THE RIGCOUNTSTAGE TABLE */
        /* CLEAN UP THE RIG NUMBERS AND STATUSES FROM RIGCOUNTSTAGE TABLE*/
    SELECT 
        [DATE] AS OPDATE,
        CASE 
            WHEN ASSETNUM IN (6011) THEN FORMAT (CONVERT(INT, '36011'),'0000000')
            WHEN ASSETNUM IN (6013) THEN FORMAT (CONVERT(INT, '36013'),'0000000')
            WHEN ASSETNUM IN (6015) THEN FORMAT (CONVERT(INT, '36015'),'0000000')
            WHEN ASSETNUM IN (0006049) THEN FORMAT (CONVERT(INT, '0036049'),'0000000')
            WHEN ASSETNUM IN (0006063) THEN FORMAT (CONVERT(INT, '0086063'),'0000000')
            WHEN ASSETNUM IN (0006065) THEN FORMAT (CONVERT(INT, '0086065'),'0000000')
            ELSE ASSETNUM END AS RIG,            
        CASE 
            WHEN [STATUS] LIKE '%DOWN FOR REPAIR%' THEN 'DFR'
            WHEN [STATUS] LIKE '%DFR%' THEN 'DFR'
            WHEN [STATUS] LIKE '%NEEDS REPAIR%' THEN 'NR'
            WHEN [STATUS] LIKE '%NR%' THEN 'NR'
            WHEN [STATUS] LIKE '%REPAIR%' THEN 'DFR'
            ELSE [STATUS] END AS [STATUS], -- IN CASE SOMEONE PUTS A SPACE OR TAB INSTEAD OF A RIGTYPE
        [DAYLIGHT24HR] AS RIGTYPE
    FROM DBO.RigCountStage 
    WHERE CLIENT LIKE '%HESS%' AND ASSETNUM IS NOT NULL AND ASSETNUM <> '' AND ASSETNUM NOT LIKE '%[A-Za-z]%' AND ASSETTYPE = 'RIG'
)

, HESS_RIGCOUNTSTAGE AS (
    SELECT 
        R.RIG,
        R.[STATUS],
        CASE 
            WHEN R.RIGTYPE = '' THEN NULL 
            WHEN A.JOBENDDATE IS NULL AND R.[STATUS] IN ('DFR','NR') THEN R.RIGTYPE 
            WHEN R.RIGTYPE = '' AND A.JOBENDDATE IS NOT NULL AND R.[STATUS] IN ('DFR','NR') THEN R.[STATUS] 
            ELSE R.RIGTYPE END AS RIGTYPE,
        CASE WHEN R.OPDATE IS NULL THEN A.ACTIVITYENDDATE ELSE OPDATE END AS OPDATE 
    FROM __RIG_COUNT_STAGE_ETL__  AS R 
    LEFT JOIN __KV_ACTIVITIES__ AS A ON (R.RIG = A.RIG AND R.OPDATE = A.ACTIVITYENDDATE)
)

, CALENDAR_RIGS AS (
        /* CREATES A TABLE WITH ALL DATES AND HESS RIGS */
    SELECT 
        ALLDATES,
        H.RIG 
    FROM LISTDATES AS L -- CALENDAR TABLE CREATED USING A STORED PROC, IT IS LIMITED HISTORICALLY TO 12-01-2024
    CROSS JOIN (SELECT DISTINCT RIG FROM HESS_RIGCOUNTSTAGE) AS H -- DISTINCT LIST OF HESS RIGS 
)

, RCS_MINDATE AS (
    /* FIND THE FIRST DATE THAT A RIG TYPE WAS RECORDED IN THE RIGCOUNTSTAGE TABLE */
    SELECT 
        C.RIG,
        /* IF THE FIRST RECORD HAS THE RIG IN THE SHOP WE NEED TO MANUALLY ADJUST THE FOR THE CORRECT RIGTYPE */
        H.RIGTYPE, 
        C.MINDATE
    FROM (
        SELECT DISTINCT 
            RIG, 
            MIN(OPDATE) OVER (PARTITION BY RIG ORDER BY OPDATE) AS MINDATE
        FROM HESS_RIGCOUNTSTAGE
        WHERE RIGTYPE <> '' AND --LOOKING FOR THE FIRST TIME AN RIGTYPE IS ESTABLISHED
            RIG NOT IN ('0086063', '0006063') --SPECIAL HANDLING OF THIS RIG 
    ) AS C 
    LEFT JOIN HESS_RIGCOUNTSTAGE AS H ON (C.RIG = H.RIG AND C.MINDATE = H.OPDATE)
)

, SPECIAL_CASE_RIGTYPES AS (
    /* ESTABLISH THE NEW MINDATE  */ 
	SELECT 
		RIG,
		RIGTYPE,
		MIN(MINDATE) OVER (PARTITION BY RIG) AS MINDATE
	FROM (	
	/*  SPECIAL CIRCUMSTANCE WHEN THE FIRST INSTANCE IN THE RIGCOUNTSTAGE TABLE IS DFR OR NR, WE NEED TO SET THE CORRECT RIGTYPE FOR THE BACKFILL */
		SELECT 
			C.ALLDATES,
			CASE 
				WHEN LEAD(C.ALLDATES) OVER (PARTITION BY C.RIG ORDER BY C.ALLDATES) = M.MINDATE -- LOOK AHEAD ONE DAY 
					AND C.RIG = M.RIG AND M.RIGTYPE IN ('DFR','NR') THEN DATEADD(D, -1, M.MINDATE) 
				ELSE M.MINDATE END AS MINDATE,
			DATEADD(D, -1, M.MINDATE)  AS PREV_MINDATE,
			C.RIG,
            -- SPECIAL CASE DEPENDING ON THE RIG NUMBER 
			CASE 
				WHEN LEAD(C.ALLDATES) OVER (PARTITION BY C.RIG ORDER BY C.ALLDATES) = M.MINDATE -- LOOK AHEAD ONE DAY 
					AND C.RIG = M.RIG AND M.RIGTYPE IN ('DFR','NR') 
                THEN 'Unknown' 
				ELSE M.RIGTYPE END AS RIGTYPE
		FROM CALENDAR_RIGS AS C 
		LEFT JOIN RCS_MINDATE AS M ON C.RIG = M.RIG 
		) R 
		WHERE MINDATE = PREV_MINDATE 		
)

, SET_RIGTYPES AS (
    /* ADJUST MISSING RIGTYPES AND RIGSUBTYPES */
    SELECT 
        C.ALLDATES,
        CASE 
			WHEN S.MINDATE < M.MINDATE THEN S.MINDATE  -- FOR THE SPECIAL CASE DFR, NR RIGS 
			ELSE M.MINDATE 
			END AS MINDATE, 
        C.RIG,
        CASE 
            /* SPECIAL CASE RIG */
            WHEN C.RIG ='0086063' AND (C.ALLDATES < '2024-06-14' OR C.ALLDATES > '2024-12-14') THEN '24 Hour' 
            WHEN C.RIG ='0086063' AND (C.ALLDATES >= '2024-06-14' AND C.ALLDATES < '2024-12-15') THEN 'Daylight'   
			WHEN C.ALLDATES < S.MINDATE AND C.RIG = S.RIG THEN S.RIGTYPE -- 2 SPECIAL CASE RIGS THAT HAD DFR, NR AS FIRST RIGCOUNTSTAGE LISTING
            WHEN C.ALLDATES < M.MINDATE AND C.RIG = M.RIG THEN M.RIGTYPE -- BACKFILL THE BEGINNING RIGTYPES FROM THE GENERATED CALENDAR WITH THE FIRST RIGTYPE FROM THE RIGCOUNTSTAGE TABLE 
            WHEN C.ALLDATES = R.OPDATE AND C.RIG = R.RIG THEN R.RIGTYPE -- FILL IN THE KNOWN RIG TYPES
            ELSE NULL -- NULL OUT THE MISSING VALUES 
            END AS RIGTYPE
    FROM CALENDAR_RIGS AS C 
	LEFT JOIN RCS_MINDATE M ON C.RIG = M.RIG
    LEFT JOIN SPECIAL_CASE_RIGTYPES AS S ON C.RIG = S.RIG 
    LEFT JOIN HESS_RIGCOUNTSTAGE AS R ON (C.RIG = R.RIG  AND C.ALLDATES = R.OPDATE)   
)

, ADD_SUBTYPES AS (
    SELECT 
        C.ALLDATES,
        C.RIG,
        CASE 
            /* RIGS THAT WERE DNR OR NR AND NEVER HAD A WORKING STATUS WHEN THEY WERE ASSIGNED TO HESS */
            WHEN C.RIGTYPE IS NULL AND C.ALLDATES = MIN(C.ALLDATES) OVER (PARTITION BY C.RIG ORDER BY C.ALLDATES) THEN 'Unknown'
            ELSE C.RIGTYPE END AS RIGTYPE,
        CASE 
            /* SPECIAL RIG CASE */
            WHEN C.RIG = '0086063' AND (C.ALLDATES < '2024-06-14' OR C.ALLDATES > '2024-12-14')  THEN '24-Hour' 
            WHEN C.RIG = '0086063' AND (C.ALLDATES >= '2024-06-14' AND C.ALLDATES < '2024-12-15') THEN '7-Day' 
            /* RIGS THAT WERE DNR OR NR AND NEVER HAD A WORKING STATUS WHEN THEY WERE ASSIGNED TO HESS */
            WHEN C.RIGTYPE IS NULL AND C.ALLDATES = MIN(C.ALLDATES) OVER (PARTITION BY C.RIG ORDER BY C.ALLDATES) THEN 'Unknown'
            /* OTHER RIGS */
            WHEN C.RIGTYPE = 'DFR' THEN 'DFR'
            WHEN C.RIGTYPE = 'Unknown' THEN 'Unknown'
            WHEN C.RIG IN ('0006008', '0006098') AND C.RIGTYPE <> 'DFR' THEN '5-Day'
            WHEN C.RIGTYPE = 'Daylight' AND C.RIG NOT IN ('0006008', '0006098') THEN '7-Day'
            WHEN C.RIGTYPE = '24 Hour' THEN '24-Hour'
            ELSE NULL 
            END AS RIGSUBTYPE
    FROM SET_RIGTYPES AS C 
)

, FORWARD_FILL_SETUP AS (
        /* SET UP GROUPINGS TO ENABLE FORWARD FILL IN THE NEXT CTE */
    SELECT  
        ALLDATES,
        RIG,
        RIGTYPE, 
        RIGSUBTYPE ,
        COUNT(RIGTYPE) OVER (PARTITION BY RIG ORDER BY ALLDATES) AS _GRP -- CREATES A GROUPING SO THAT WE CAN FORWARD FILL NULL VALUES FROM THE PREVIOUS NON NULL VALUE
    FROM ADD_SUBTYPES
)

, FORWARD_FILL_RIGTYPES AS (
    /* FORWARD FILL ANY MISSING RIGTYPES AND/OR RIGSUBTYPES */
    SELECT 
        ALLDATES AS OPDATE,
        RIG,
        /* ANYWHERE THERE IS A NULL, THIS CODE USES THE LAST NON NULL VALUE */
        CASE 
            WHEN RIGTYPE IS NULL THEN FIRST_VALUE(RIGTYPE) OVER (PARTITION BY RIG,_GRP ORDER BY ALLDATES) ELSE RIGTYPE END AS RIGTYPE,
        CASE 
            WHEN RIGSUBTYPE IS NULL THEN FIRST_VALUE(RIGSUBTYPE) OVER (PARTITION BY RIG,_GRP ORDER BY ALLDATES) ELSE RIGSUBTYPE END AS RIGSUBTYPE
    FROM FORWARD_FILL_SETUP   
)

INSERT INTO [reporting].[Hess_Rig_List_Hist]    
  (RIG, RIGTYPE, RIGSUBTYPE, OPDATE) 
SELECT DISTINCT 
    RIG, RIGTYPE, RIGSUBTYPE, OPDATE
FROM FORWARD_FILL_RIGTYPES
ORDER BY RIG, OPDATE 
OPTION( MAXRECURSION 1000)
END;
GO

SELECT RIG, COUNT(*) CNT
FROM reporting.Hess_Rig_List_Hist
WHERE RIG IN ('0036011','0036013','0036015')
GROUP BY RIG
;