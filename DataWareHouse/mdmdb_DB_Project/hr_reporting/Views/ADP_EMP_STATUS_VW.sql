CREATE VIEW [hr_reporting].[ADP_EMP_STATUS_VW] AS 


WITH __SHAPE_DATA__ AS (
    /* SHAPE THE DATA SO WE CAN SUBGROUP BY EIN, JOBTITLE AND EMP STATUS WHERE THE COMBINATION MAY EXISTS IN DIFFERENT LINEAR TIME FRAMES */
    SELECT 
        EIN,
        JOBTITLE,
        EMPLOYEESTATUS,
        STARTDATE,
        ENDDATE,
        REPLACE(CONCAT(EIN,JOBTITLE,EMPLOYEESTATUS),' ', '') AS GROUPID,
        ROW_NUMBER() OVER (PARTITION BY EIN ORDER BY STARTDATE) AS _RN 
    FROM HR_REPORTING.ADP_POSITION_TENURE_DETAILED_VW
    WHERE MKTP_CODE NOT IN ('CMM','MXM','BAM','CBM','ARM','CYM','ECM','EGM','OMM')
) 

, __TITLE_ENDDATE__ AS (
    /* ESTABLISH THE FINAL JOBTITLE ENDDATE */
    SELECT 
        EIN,
        JOBTITLE,
        EMPLOYEESTATUS,
        GROUPID, 
        STARTDATE,
        ENDDATE,
        LEAD(STARTDATE) OVER (PARTITION BY EIN ORDER BY STARTDATE) AS NEXT_STARTDATE,
        _RN,
        CASE 
            WHEN GROUPID = LEAD(GROUPID) OVER (PARTITION BY EIN ORDER BY _RN ASC) THEN NULL 
            ELSE ENDDATE
            END AS JOBTITLE_END 
    FROM __SHAPE_DATA__  
)

SELECT * FROM __TITLE_ENDDATE__
/* note to end user: you need to sort by EIN and STARTDATE before doing an UpFill in BPI and then create individual join keys GOUPID + some other unique identifier*/
GO

